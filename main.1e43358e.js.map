{"version":3,"sources":["src/logic/elements.js","src/logic/speech.js","src/main.js"],"names":["formInputs","Array","from","document","querySelectorAll","text","getElementById","textWrapper","textContainer","warningWrapper","warningText","settingsPannel","settingsButton","settingsIcon","settingsForm","xIcon","checkIcon","getStyle","element","styleProp","style","getComputedStyle","getNumericalValue","regex","parseInt","match","addEventListener","settingsDisplay","display","opacity","forEach","input","name","readValue","onChange","e","v","target","value","color","i","body","backgroundColor","documentElement","Math","round","height","lineHeight","lineCount","nextLineHeight","nextHeight","fontSize","SpeechRecognition","window","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","recognition","autorestart","setErrorState","allowRestart","start","textContent","continuous","interimResults","onresult","resultArray","results","string","map","r","transcript","join","scroll","scrollHeight","onend","onerror","error","console","warn"],"mappings":";;AEAA;;AAEA0D,oBAAYI,KAAZ;;AFFA;AACA,ACDA,IDCM9D,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAX,CAAnB;AACO,IAAMC,IAAI,GAAGF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAb;ACDP;ADEO,IAAMC,WAAW,GAAGJ,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAApB;ACSP;ADRO,ACSP,IDTaE,ACSP4C,aDToB,GAAGjD,CCSN,GACtBkD,IDVoC,CAAC/C,CCU/B,CAAC8C,YDVqB,CAAwB,ICUpD,IACAC,MAAM,CDXsB,ACWrBC,CDXD,sBCUN,IAEAD,MAAM,CAACE,oBAFP,IAGAF,MAAM,CAACG,mBAHP,IAIAH,MAAM,CAACI,kBALR;AAOO,IAAIC,WAAJ;ADdA,IAAMjD,cAAc,GAAGN,QAAQ,CAACG,cAAT,CAAwB,gBAAxB,CAAvB;ACeP,IAAIqD,WAAW,GAAG,IAAlB;ADdO,IAAMjD,WAAW,GAAGP,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAApB;ACgBP,IAAMsD,aAAa,GAAG,SAAhBA,aAAgB,CAACC,YAAD,EAAkB;ADdjC,ACeNF,EAAAA,EDfYhD,SCeD,GAAG,CAAC,CDfW,ACeVkD,GDfa1D,QAAQ,CAACG,ACetC,cDf6B,CAAwB,gBAAxB,CAAvB;ACgBNS,mBAAMK,KAAN,CAAYQ,OAAZ,GAAsB,OAAtB;ADfM,ACgBNZ,IDhBYJ,cAAc,GAAGT,ECgBnBiB,KAAV,CDhBqC,ACgBrBQ,CDhBsBtB,MCgBtC,GAA0B,KDhBG,CAAwB,ACgBrD,gBDhB6B,CAAvB;ACiBNE,2BAAcY,KAAd,CAAoBQ,OAApB,GAA8B,MAA9B;ADhBM,ACiBNhB,IDjBYC,YAAY,GAAGV,QAAQ,CAACG,ACiBrBc,KAAf,CAAqBQ,OAArB,CDjB2B,CAAwB,CCiBpB,MAA/B,ODjB2B,CAArB;ACkBNnB,4BAAeW,KAAf,CAAqBQ,OAArB,GAA+B,OAA/B;ADjBM,ACkBNjB,IDlBYG,YAAY,GAAGX,QAAQ,CAACG,ACkBrBc,KAAf,CAAqBQ,OAArB,CDlB2B,CAAwB,CCkBpB,MAA/B,ODlB2B,CAArB;ACmBN,CARD;ADTO,IAAMb,KAAK,GAAGZ,QAAQ,CAACG,cAAT,CAAwB,OAAxB,CAAd;ACmBP,IAAI,OAAO8C,iBAAP,KAA6B,WAAjC,EAA8C;ADlBvC,ACmBN,IDnBYpC,SAAS,GAAGb,QAAQ,ACmBhCuD,CDnBiCpD,UCmBtB,GAAG,CDnBU,CAAwB,WAAxB,CAAlB,EACP;AAEA,ACgBiBwD,IAAAA,KAAK,EAAE,iBAAM,CAAE;AAAjB,GAAd;AACAF,EAAAA,aAAa;AACblD,wBAAYqD,WAAZ,GACC,yGADD;ADjBD,ACmBC,CALD,GDdM9C,GCmBC,KDnBO,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAUC,SAAV;AAAA,ACoBhB,SDnBAD,OAAO,CAACE,KAAR,CAAcD,CCmBduC,QDnBA,GCmBW,EDnBiBrC,CCmBd,IAAI+B,WDnB0B,CAAClC,KCmB/B,EDnB8B,ACmB5C,CDnB4B,CAA0BC,SAA1B,CADZ;AAAA,ACqBhB,CDrBD,CCsBA;AAEA;ADrBA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACjB,IAAD,EAAU;AACnC,MAAMkB,KAAK,GAAG,MAAd;AACA,ACoBDmC,SDpBQlC,ECoBG,CAACwC,KDpBI,CAAC3D,IAAI,ACoBrB,CDpBsBoB,ECoBG,GDpBR,CAAWF,ACoB5B,KDpBiB,EAAkB,CAAlB,CAAD,CAAf;AACA,ACqBDmC,CDxBA,EAIA,QCoBW,CAACO,cAAZ,GAA6B,IAA7B;ADlBA;ACoBAP,WAAW,CAACQ,QAAZ,GAAuB,UAAC/B,CAAD,EAAO;AAC7B,MAAMgC,WAAW,GAAGlE,KAAK,CAACC,IAAN,CAAWiC,CAAC,CAACiC,OAAb,CAApB;ADpBDxD,ACqBC,MAAMyD,MAAM,EDrBC,CAAC3C,ACqBCyC,WAAW,CAACG,GAAZ,CDrBhB,ACqBgC,CDrBA,OAAhC,EAAyC,ACqBRC,CAAD,WDrBe;AAC9C,ACoB+B,MDpBzB5C,KCoBgC4C,CAAC,CAAC,CAAD,CAAD,CAAKC,KDpBtB,GAAGvD,ECoBO,MDpBC,CAACN,cAAD,EAAiB,SAAjB,CAAhC;ACoB+B,GAAhB,EAAwC8D,IAAxC,CAA6C,EAA7C,CAAf;ADlBA,ACmBApE,MDnBIsB,YCmBCoC,GDnBc,KAAK,GCmBxB,GDnBA,ACmBmBM,EDnBa,ICmBhC;ADlBC1D,IAAAA,cAAc,CAACS,KAAf,CAAqBQ,OAArB,GAA+B,OAA/B;AACAf,ACkBDN,IDlBCM,YAAY,CAACO,KAAb,CAAmBS,ECkBR6C,KDlBX,CCkBD,CAAmB,CDlBW,ACkB9B,CDlBC,CCkBqBnE,uBAAYoE,YAAlC;ADjBC,ACkBD,CALD,EDhBC,MAGO;AACNhE,IAAAA,cAAc,CAACS,KAAf,CAAqBQ,OAArB,GAA+B,MAA/B;AACAf,ACkBF6C,IDlBE7C,OCkBS,CAAC+D,IDlBE,CAACxD,ACkBf,GAAoB,EDlBlB,CAAmBS,OAAnB,ECkBwB,CDlBK,GAA7B;AACA,ACkBD;ADjBA,ACkBA,CD5BD;AAYA7B,ACiBC,MAAI2D,IDjBK,CAAC7B,MCiBV,CDjBD,CAAmB,ACiBD,UDjBEC,KAAD,EAAW;AAAA,ACkB5B2B,IAAAA,EDjBO1B,IADqB,GACZD,ECiBL,CAAC+B,EDlBgB,CACrB9B,ECiBP,EDlB4B;AAE7B,ACiBC,MDjBGC,SAAJ;AACA,ACiBA,CAND,KDXKC,QAAJ;;AACA,ACkBDwB,UDlBS1B,CCkBE,CAAC6C,EDlBX,KCkBD,GAAsB,UAAC1C,CAAD,EAAO;ADjB3B,ACkBD,SDlBM,CCkBEA,CAAC,CAAC2C,KAAV,GDlBC;AACC7C,ACkBD,MDlBCA,GCkBI,MDlBK,GAAGhB,ECkBb,MDlBqB,CAACZ,IAAD,EAAO,OAAP,CAApB;ACmBA;ADjBA6B,MAAAA,QAAQ,GAAG,kBAACC,CAAD,EAAO;AACjB,ACiBF,SAAK,GDjBGC,CAAC,GAAGD,CAAC,CAACE,ICiBd,EDjBY,CAASC,KAAnB;AACAjC,ACiBF,QDjBEA,CCiBG,GDjBC,CAACe,KAAL,CAAWmB,KAAX,GAAmBH,CAAnB,ECiBF;ADhBEpC,ACiBD4D,MAAAA,EDjBC5D,UAAU,CAAC8B,ACiBC,ODjBZ,CAAmB,UAACU,CAAD;AAAA,ACkBpB9B,iBDlB4B8B,CAAC,CAACpB,KAAF,CAAQmB,GCkBxBwB,EDlBgB,GAAgB3B,CAAxB,KCkBpB,GACC,6GADD;ADlBoB,ACoBpB,SDpBC;AACAzB,QAAAA,cAAc,CAACS,KAAf,CAAqBmB,KAArB,GAA6BH,CAA7B;AACA,ACmBF,ODxBC,ECwBI,SAAL;AACC;ADnBA,ACoBAwB,MAAAA,aAAa;AACblD,4BAAYqD,WAAZ,GACC,6FADD;ADpBD,ACsBC,SDtBI,iBAAL;AACC9B,MAAAA,SAAS,GAAGhB,QAAQ,CAACd,QAAQ,CAACsC,IAAV,EAAgB,kBAAhB,CAApB;ACsBD;ADpBCP,ACqBA6C,MDrBA7C,ACqBA6C,OAAO,CDrBC,ACqBAC,GDrBG,CCqBX,WAAgB7C,CAAC,CAAC2C,IDrBN3C,CAAD,ACqBX,EDrBkB;AACjB,ACIH,YDJSC,CAAC,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAnB;AACAnC,ACqBH,CAnBD,EAoBA,KDtBIA,QAAQ,CAACsC,IAAT,CAAcrB,KAAd,CAAoBsB,eAApB,GAAsCN,CAAtC;AACAjC,QAAAA,QAAQ,CAACwC,eAAT,CAAyBvB,KAAzB,CAA+BsB,eAA/B,GAAiDN,CAAjD;AACA,OAJD;;AAKA;;AACD,SAAK,UAAL;AACCH,MAAAA,SAAS,GAAGX,iBAAiB,CAACL,QAAQ,CAACZ,IAAD,EAAO,WAAP,CAAT,CAA7B;;AAEA6B,MAAAA,QAAQ,GAAG,kBAACC,CAAD,EAAO;AACjB,YAAMC,CAAC,GAAGQ,IAAI,CAACC,KAAL,CAAWV,CAAC,CAACE,MAAF,CAASC,KAApB,CAAV;AAEA,YAAMQ,MAAM,GAAGxB,iBAAiB,CAACL,QAAQ,CAACV,WAAD,EAAc,QAAd,CAAT,CAAhC;AACA,YAAMwC,UAAU,GAAGzB,iBAAiB,CAACL,QAAQ,CAACZ,IAAD,EAAO,aAAP,CAAT,CAApC;AACA,YAAM2C,SAAS,GAAGF,MAAM,GAAGC,UAA3B;AAEA,YAAME,cAAc,GAAGL,IAAI,CAACC,KAAL,CAAWT,CAAC,GAAG,CAAf,CAAvB;AACA,YAAMc,UAAU,GAAGN,IAAI,CAACC,KAAL,CAAWI,cAAc,GAAGD,SAA5B,CAAnB;AAEAjB,QAAAA,KAAK,CAACO,KAAN,GAAcF,CAAd;AACA/B,QAAAA,IAAI,CAACe,KAAL,CAAW+B,QAAX,aAAyBf,CAAzB;AACA/B,QAAAA,IAAI,CAACe,KAAL,CAAW2B,UAAX,aAA2BE,cAA3B;AACA1C,QAAAA,WAAW,CAACa,KAAZ,CAAkB0B,MAAlB,aAA8BI,UAA9B;AACA,OAdD;;AAeA;;AACD,SAAK,WAAL;AAAkB;AACjB,YAAMJ,MAAM,GAAGxB,iBAAiB,CAACL,QAAQ,CAACV,WAAD,EAAc,QAAd,CAAT,CAAhC;AACA,YAAMwC,UAAU,GAAGzB,iBAAiB,CAACL,QAAQ,CAACZ,IAAD,EAAO,aAAP,CAAT,CAApC;AACA4B,QAAAA,SAAS,GAAGa,MAAM,GAAGC,UAArB;;AAEAb,QAAAA,QAAQ,GAAG,kBAACC,CAAD,EAAO;AACjB,cAAMC,CAAC,GAAGQ,IAAI,CAACC,KAAL,CAAWV,CAAC,CAACE,MAAF,CAASC,KAApB,CAAV;AACA,cAAMa,QAAQ,GAAG7B,iBAAiB,CAACL,QAAQ,CAACZ,IAAD,EAAO,WAAP,CAAT,CAAlC;AACA,cAAM0C,UAAU,GAAGH,IAAI,CAACC,KAAL,CAAWM,QAAQ,GAAG,CAAtB,CAAnB;AACA,cAAML,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWE,UAAU,GAAGX,CAAxB,CAAf;AACA7B,UAAAA,WAAW,CAACa,KAAZ,CAAkB0B,MAAlB,aAA8BA,MAA9B;AACAzC,UAAAA,IAAI,CAACe,KAAL,CAAW2B,UAAX,aAA2BA,UAA3B;AACAhB,UAAAA,KAAK,CAACO,KAAN,GAAcF,CAAd;AACA,SARD;;AASA;AACA;;AACD;AACC;AAxDF;;AA0DAL,EAAAA,KAAK,CAACO,KAAN,GAAcL,SAAd;AACAF,EAAAA,KAAK,CAACL,gBAAN,CAAuB,QAAvB,EAAiCQ,QAAjC;AACA,CAhED,GAiEA","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["// START - ELEMENTS - START\nconst formInputs = Array.from(document.querySelectorAll('.input'))\nexport const text = document.getElementById('text')\nexport const textWrapper = document.getElementById('textWrapper')\nexport const textContainer = document.getElementById('textContainer')\n\nexport const warningWrapper = document.getElementById('warningWrapper')\nexport const warningText = document.getElementById('warningText')\n\nexport const settingsPannel = document.getElementById('settingsPannel')\nexport const settingsButton = document.getElementById('settingsButton')\nexport const settingsIcon = document.getElementById('settingsIcon')\nexport const settingsForm = document.getElementById('settingsForm')\n\nexport const xIcon = document.getElementById('xIcon')\nexport const checkIcon = document.getElementById('checkIcon')\n// END - ELEMENTS - END\n\n// START - UTILS - START\nconst getStyle = (element, styleProp) =>\n\telement.style[styleProp] || getComputedStyle(element)[styleProp]\n\nconst getNumericalValue = (text) => {\n\tconst regex = /\\d+/g\n\treturn parseInt(text.match(regex)[0])\n}\n// END - UTILS - END\n\n// START - EVENT LISTENERS - START\nsettingsButton.addEventListener('click', () => {\n\tconst settingsDisplay = getStyle(settingsPannel, 'display')\n\n\tif (settingsDisplay === 'none') {\n\t\tsettingsPannel.style.display = 'block'\n\t\tsettingsIcon.style.opacity = 1\n\t} else {\n\t\tsettingsPannel.style.display = 'none'\n\t\tsettingsIcon.style.opacity = 0.7\n\t}\n})\n\nformInputs.forEach((input) => {\n\tconst { name } = input\n\tlet readValue\n\tlet onChange\n\tswitch (name) {\n\t\tcase 'textColor':\n\t\t\treadValue = getStyle(text, 'color')\n\n\t\t\tonChange = (e) => {\n\t\t\t\tconst v = e.target.value\n\t\t\t\ttext.style.color = v\n\t\t\t\tformInputs.forEach((i) => (i.style.color = v))\n\t\t\t\tsettingsPannel.style.color = v\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'backgroundColor':\n\t\t\treadValue = getStyle(document.body, 'background-color')\n\n\t\t\tonChange = (e) => {\n\t\t\t\tconst v = e.target.value\n\t\t\t\tdocument.body.style.backgroundColor = v\n\t\t\t\tdocument.documentElement.style.backgroundColor = v\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'fontSize':\n\t\t\treadValue = getNumericalValue(getStyle(text, 'font-size'))\n\n\t\t\tonChange = (e) => {\n\t\t\t\tconst v = Math.round(e.target.value)\n\n\t\t\t\tconst height = getNumericalValue(getStyle(textWrapper, 'height'))\n\t\t\t\tconst lineHeight = getNumericalValue(getStyle(text, 'line-height'))\n\t\t\t\tconst lineCount = height / lineHeight\n\n\t\t\t\tconst nextLineHeight = Math.round(v + 8)\n\t\t\t\tconst nextHeight = Math.round(nextLineHeight * lineCount)\n\n\t\t\t\tinput.value = v\n\t\t\t\ttext.style.fontSize = `${v}px`\n\t\t\t\ttext.style.lineHeight = `${nextLineHeight}px`\n\t\t\t\ttextWrapper.style.height = `${nextHeight}px`\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'lineCount': {\n\t\t\tconst height = getNumericalValue(getStyle(textWrapper, 'height'))\n\t\t\tconst lineHeight = getNumericalValue(getStyle(text, 'line-height'))\n\t\t\treadValue = height / lineHeight\n\n\t\t\tonChange = (e) => {\n\t\t\t\tconst v = Math.round(e.target.value)\n\t\t\t\tconst fontSize = getNumericalValue(getStyle(text, 'font-size'))\n\t\t\t\tconst lineHeight = Math.round(fontSize + 8)\n\t\t\t\tconst height = Math.round(lineHeight * v)\n\t\t\t\ttextWrapper.style.height = `${height}px`\n\t\t\t\ttext.style.lineHeight = `${lineHeight}px`\n\t\t\t\tinput.value = v\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tdefault:\n\t\t\treturn\n\t}\n\tinput.value = readValue\n\tinput.addEventListener('change', onChange)\n})\n// END - EVENT LISTENERS - END\n","import { warningText } from './elements'\nimport {\n\ttext,\n\ttextWrapper,\n\ttextContainer,\n\txIcon,\n\tcheckIcon,\n\twarningWrapper,\n\tsettingsButton,\n\tsettingsPannel,\n} from '/src/logic/elements'\n\n// START - SPEECH RECOG SETUP - START\nconst SpeechRecognition =\n\twindow.SpeechRecognition ||\n\twindow.webkitSpeechRecognition ||\n\twindow.mozSpeechRecognition ||\n\twindow.msSpeechRecognition ||\n\twindow.oSpeechRecognition\n\nexport let recognition\nlet autorestart = true\n\nconst setErrorState = (allowRestart) => {\n\tautorestart = !!allowRestart\n\txIcon.style.display = 'block'\n\tcheckIcon.style.display = 'none'\n\ttextContainer.style.display = 'none'\n\tsettingsButton.style.display = 'none'\n\twarningWrapper.style.display = 'block'\n\tsettingsPannel.style.display = 'none'\n}\n\nif (typeof SpeechRecognition === 'undefined') {\n\trecognition = { start: () => {} }\n\tsetErrorState()\n\twarningText.textContent =\n\t\t'This browser does not support the Speech Recognition API. Please switch to Google Chrome and try again.'\n} else {\n\trecognition = new SpeechRecognition()\n}\n// END - SPEECH RECOG SETUP- END\n\n// START - SPEECH RECOG CONIG - START\nrecognition.continuous = true\n\nrecognition.interimResults = true\n\nrecognition.onresult = (e) => {\n\tconst resultArray = Array.from(e.results)\n\tconst string = resultArray.map((r) => r[0].transcript).join('')\n\ttext.textContent = string\n\ttextWrapper.scroll(0, textWrapper.scrollHeight)\n}\n\nrecognition.onend = () => {\n\t// Speech Recognition ends every few seconds of inactivity\n\t// but we want to keep it alive while the user is on the page\n\tif (autorestart) {\n\t\trecognition.start()\n\t}\n}\n\nrecognition.onerror = (e) => {\n\tswitch (e.error) {\n\t\tcase 'no-speech':\n\t\t\tbreak\n\t\tcase 'not-allowed':\n\t\tcase 'service-not-allowed':\n\t\t\tsetErrorState()\n\t\t\twarningText.textContent =\n\t\t\t\t'Stream CC needs permission to access your microphone. Please enable microphone access and reload this page.'\n\t\t\tbreak\n\t\tcase 'network':\n\t\t\t// @TODO Networking error should lead to a reconnect once network connection is detected\n\t\t\tsetErrorState()\n\t\t\twarningText.textContent =\n\t\t\t\t'Stream CC cannot connect to the internet. Please check your connection and reload the page.'\n\t\t\tbreak\n\t\tdefault:\n\t\t\tconsole.warn(`${e.error}. You can report this error with reproduction steps to https://github.com/tchryssos/stream-cc/issues`)\n\t}\n}\n// END - SPEECH RECOG CONFIG - END\n","import { recognition } from '/src/logic/speech'\n\nrecognition.start()\n"]}