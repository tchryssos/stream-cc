{"version":3,"sources":["src/logic/elements.js","src/logic/speech.js","src/main.js"],"names":["formInputs","Array","from","document","querySelectorAll","text","getElementById","textWrapper","textContainer","warningWrapper","warningText","settingsPannel","settingsButton","settingsIcon","settingsForm","xIcon","checkIcon","getStyle","element","styleProp","style","getComputedStyle","getNumericalValue","regex","parseInt","match","addEventListener","settingsDisplay","display","opacity","forEach","input","name","readValue","onChange","e","v","target","value","color","i","body","backgroundColor","documentElement","Math","round","height","lineHeight","lineCount","nextLineHeight","nextHeight","fontSize","SpeechRecognition","window","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","recognition","autorestart","setErrorState","allowRestart","start","textContent","continuous","interimResults","onresult","resultArray","results","string","map","r","transcript","join","scroll","scrollHeight","onend","onerror","error"],"mappings":"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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["// START - ELEMENTS - START\nconst formInputs = Array.from(document.querySelectorAll('.input'))\nexport const text = document.getElementById('text')\nexport const textWrapper = document.getElementById('textWrapper')\nexport const textContainer = document.getElementById('textContainer')\n\nexport const warningWrapper = document.getElementById('warningWrapper')\nexport const warningText = document.getElementById('warningText')\n\nexport const settingsPannel = document.getElementById('settingsPannel')\nexport const settingsButton = document.getElementById('settingsButton')\nexport const settingsIcon = document.getElementById('settingsIcon')\nexport const settingsForm = document.getElementById('settingsForm')\n\nexport const xIcon = document.getElementById('xIcon')\nexport const checkIcon = document.getElementById('checkIcon')\n// END - ELEMENTS - END\n\n// START - UTILS - START\nconst getStyle = (element, styleProp) =>\n\telement.style[styleProp] || getComputedStyle(element)[styleProp]\nconst getNumericalValue = (text) => {\n\tconst regex = /\\d+/g\n\treturn parseInt(text.match(regex)[0])\n}\n// END - UTILS - END\n\nsettingsButton.addEventListener('click', () => {\n\tconst settingsDisplay = getStyle(settingsPannel, 'display')\n\n\tif (settingsDisplay === 'none') {\n\t\tsettingsPannel.style.display = 'block'\n\t\tsettingsIcon.style.opacity = 1\n\t} else {\n\t\tsettingsPannel.style.display = 'none'\n\t\tsettingsIcon.style.opacity = 0.7\n\t}\n})\n\nformInputs.forEach((input) => {\n\tconst { name } = input\n\tlet readValue\n\tlet onChange\n\tswitch (name) {\n\t\tcase 'textColor':\n\t\t\treadValue = getStyle(text, 'color')\n\n\t\t\tonChange = (e) => {\n\t\t\t\tconst v = e.target.value\n\t\t\t\ttext.style.color = v\n\t\t\t\tformInputs.forEach((i) => (i.style.color = v))\n\t\t\t\tsettingsPannel.style.color = v\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'backgroundColor':\n\t\t\treadValue = getStyle(document.body, 'background-color')\n\n\t\t\tonChange = (e) => {\n\t\t\t\tconst v = e.target.value\n\t\t\t\tdocument.body.style.backgroundColor = v\n\t\t\t\tdocument.documentElement.style.backgroundColor = v\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'fontSize':\n\t\t\treadValue = getNumericalValue(getStyle(text, 'font-size'))\n\n\t\t\tonChange = (e) => {\n\t\t\t\tconst v = Math.round(e.target.value)\n\n\t\t\t\tconst height = getNumericalValue(getStyle(textWrapper, 'height'))\n\t\t\t\tconst lineHeight = getNumericalValue(getStyle(text, 'line-height'))\n\t\t\t\tconst lineCount = height / lineHeight\n\n\t\t\t\tconst nextLineHeight = Math.round(v + 8)\n\t\t\t\tconst nextHeight = Math.round(nextLineHeight * lineCount)\n\n\t\t\t\tinput.value = v\n\t\t\t\ttext.style.fontSize = `${v}px`\n\t\t\t\ttext.style.lineHeight = `${nextLineHeight}px`\n\t\t\t\ttextWrapper.style.height = `${nextHeight}px`\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'lineCount': {\n\t\t\tconst height = getNumericalValue(getStyle(textWrapper, 'height'))\n\t\t\tconst lineHeight = getNumericalValue(getStyle(text, 'line-height'))\n\t\t\treadValue = height / lineHeight\n\n\t\t\tonChange = (e) => {\n\t\t\t\tconst v = Math.round(e.target.value)\n\t\t\t\tconst fontSize = getNumericalValue(getStyle(text, 'font-size'))\n\t\t\t\tconst lineHeight = Math.round(fontSize + 8)\n\t\t\t\tconst height = Math.round(lineHeight * v)\n\t\t\t\ttextWrapper.style.height = `${height}px`\n\t\t\t\ttext.style.lineHeight = `${lineHeight}px`\n\t\t\t\tinput.value = v\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tdefault:\n\t\t\treturn\n\t}\n\tinput.value = readValue\n\tinput.addEventListener('change', onChange)\n})\n","import { warningText } from './elements'\nimport {\n\ttext,\n\ttextWrapper,\n\ttextContainer,\n\txIcon,\n\tcheckIcon,\n\twarningWrapper,\n\tsettingsButton,\n} from '/src/logic/elements'\n\nconst SpeechRecognition =\n\twindow.SpeechRecognition ||\n\twindow.webkitSpeechRecognition ||\n\twindow.mozSpeechRecognition ||\n\twindow.msSpeechRecognition ||\n\twindow.oSpeechRecognition\n\nexport let recognition\nlet autorestart = true\n\nconst setErrorState = (allowRestart) => {\n\tautorestart = !!allowRestart\n\txIcon.style.display = 'block'\n\tcheckIcon.style.display = 'none'\n\ttextContainer.style.display = 'none'\n\tsettingsButton.style.display = 'none'\n\twarningWrapper.style.display = 'block'\n}\n\nif (typeof SpeechRecognition === 'undefined') {\n\trecognition = { start: () => {} }\n\tsetErrorState()\n\twarningText.textContent = 'This browser does not support the Speech Recognition API. Please switch to Google Chrome and try again.'\n} else {\n\trecognition = new SpeechRecognition()\n}\n\n// Recognition config\nrecognition.continuous = true\n\nrecognition.interimResults = true\n\nrecognition.onresult = (e) => {\n\tconst resultArray = Array.from(e.results)\n\tconst string = resultArray.map((r) => r[0].transcript).join('')\n\ttext.textContent = string\n\ttextWrapper.scroll(0, textWrapper.scrollHeight)\n}\n\nrecognition.onend = () => {\n\t// Speech Recognition ends every few seconds of inactivity\n\t// but we want to keep it alive while the user is on the page\n\tif (autorestart) {\n\t\trecognition.start()\n\t}\n}\n\nrecognition.onerror = (e) => {\n\tswitch (e.error) {\n\t\tcase 'no-speech':\n\t\t\tbreak\n\t\tcase 'not-allowed':\n\t\tcase 'service-not-allowed':\n\t\t\tsetErrorState()\n\t\t\twarningText.textContent =\n\t\t\t\t'Stream CC needs permission to access your microphone. Please enable microphone access and reload this page.'\n\t\t\tbreak\n\t\tcase 'network':\n\t\t\t// @TODO Networking error should lead to a reconnect once network connection is detected\n\t\t\tsetErrorState()\n\t\t\twarningText.textContent =\n\t\t\t\t'Stream CC cannot connect to the internet. Please check your connection and reload the page.'\n\t\t\tbreak\n\t\tdefault:\n\t\t\tsetErrorState()\n\t\t\twarningText.textContent = e.error\n\t}\n}\n","import { recognition } from '/src/logic/speech'\n\nrecognition.start()\n"]}